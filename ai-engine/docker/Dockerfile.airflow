FROM apache/airflow:3.0.6-python3.11

# Switch to root for system-level installations
USER root

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        vim \
        git \
        curl \
        wget \
        build-essential \
        pkg-config \
        libpq-dev \
        && apt-get autoremove -yqq --purge \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*

# Install additional system tools for debugging
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        htop \
        postgresql-client \
        redis-tools \
        net-tools \
        && rm -rf /var/lib/apt/lists/*

# Switch back to airflow user
USER airflow

RUN pip install --no-cache-dir --upgrade pip

# Install additional Airflow providers
RUN pip install --no-cache-dir \
    apache-airflow-providers-celery \
    apache-airflow-providers-postgres \
    apache-airflow-providers-http \
    apache-airflow-providers-redis

# Install FAB auth manager separately to handle Flask version conflicts (like POC)
RUN pip install --no-cache-dir apache-airflow-providers-fab

# Install lightweight ETL dependencies required during DAG parsing/runtime
COPY --chown=airflow:root ./airflow/requirements-etl.txt /opt/airflow/requirements-etl.txt
RUN pip install --no-cache-dir -r /opt/airflow/requirements-etl.txt


# Copy application code
COPY --chown=airflow:root ./airflow/dags /opt/airflow/dags/
COPY --chown=airflow:root ./airflow/plugins /opt/airflow/plugins/
COPY --chown=airflow:root ./airflow/config /opt/airflow/config/
COPY --chown=airflow:root ./airflow/variables /opt/airflow/variables/

# Copy application modules
COPY --chown=airflow:root ./database /opt/airflow/database/
COPY --chown=airflow:root ./services /opt/airflow/services/
COPY --chown=airflow:root ./config /opt/airflow/config_app/
COPY --chown=airflow:root ./utils /opt/airflow/utils/

# Note: SQL migrations are mounted from external shared folder via volume
# See docker-compose.yml volumes section

# Create necessary directories
RUN mkdir -p /opt/airflow/logs \
             /opt/airflow/dags \
             /opt/airflow/plugins \
             /opt/airflow/data/pdfs \
             /opt/airflow/data/cache \
             /opt/airflow/data/logs

# Set working directory
WORKDIR /opt/airflow

# Health check script
COPY --chown=airflow:root ./scripts/health_check.py /opt/airflow/scripts/health_check.py

# Add health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD python /opt/airflow/scripts/health_check.py

# Set environment variables
ENV AIRFLOW_HOME=/opt/airflow
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Expose ports
EXPOSE 8080

# Default command (can be overridden)
CMD ["airflow", "webserver"]
