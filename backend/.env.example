APP_NAME=backend
DEBUG=true

# Database
# For Postgres via Docker Compose
POSTGRES_DB=app
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
DATABASE_URL=postgresql+psycopg://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@localhost:5432/$(POSTGRES_DB)

# Alternatively, SQLite local database (no extra driver needed)
# DATABASE_URL=sqlite:///./app.db

# Background workers and ingestion moved to a separate service

# Logging
LOG_LEVEL=INFO
REQUEST_ID_HEADER=X-Request-ID
LOG_MAX_BODY_BYTES=8192
DISABLE_UVICORN_ACCESS=true
LOG_REQUEST_HEADERS=true
LOG_RESPONSE_HEADERS=true

# OpenTelemetry
# Set to true to enable instrumentation
ENABLE_OTEL=false
# OTLP endpoint, e.g. http://localhost:4318
OTEL_ENDPOINT=

# CORS (JSON array). Example: ["http://localhost:3000", "https://example.com"]
CORS_ORIGINS=[]
CORS_ALLOW_CREDENTIALS=true
# Methods/headers can be ["*"] to allow all
CORS_ALLOW_METHODS=["*"]
CORS_ALLOW_HEADERS=["*"]

# Redis (Upstash or compatible) for session storage
# Local dev (Docker): uncomment the next line after `docker compose up -d redis`
# REDIS_URL=redis://localhost:6379/0
# Production (e.g., Upstash): use rediss:// with username `default`
REDIS_URL=

# Session cookie (opaque, server-side stored)
SESSION_COOKIE_NAME=sid
SESSION_COOKIE_DOMAIN=.zara.com
SESSION_COOKIE_PATH=/
SESSION_COOKIE_SECURE=true
# lax or strict
SESSION_COOKIE_SAMESITE=lax
# Default session lifetime (in minutes)
SESSION_EXPIRES_MINUTES=1440

# Email service token
EMAIL_SERVICE_TOKEN=
